{"version":3,"sources":["auth.js"],"names":["email","document","getElementById","addEventListener","event","validity","typeMismatch","setCustomValidity","pass","tooShort","patternMismatch","em","value","pw","axios","post","password","then","response","console","log","catch","err","login","data","window"],"mappings":"aACA,IAAMA,MAAQC,SAASC,eAAe,eAAhCF,KAAQC,SAASC,eAAe,kBAGnCF,OAEFA,MAAMG,iBAAiB,QAAS,SAAAC,GAC3BJ,MAAMK,SAASC,aAClBN,MAAMO,kBAAkB,8BAExBP,MAAMO,kBAAkB,MAI3BC,MACCA,KAAKL,iBAAiB,QAAS,SAAAC,GAC1BI,KAAKH,SAASI,UAAYD,KAAKH,SAASK,gBAC3CF,KAAKD,kBAAkB,mJACbC,KAAKH,SAASK,gBACxBF,KAAKD,kBAAkB,uFACbC,KAAKH,SAASI,SACxBD,KAAKD,kBAAkB,kDAEvBC,KAAKD,kBAAkB,MAOzB,IAAII,SAAWC,WAAf,IAAsBC,EAAKL,MAAKI,MAAhCC,EAAAL,KAAAI,MAEAE,MAAMC,KAAK,gBACVf,MAAOW,EACPK,SAAUH,IACRI,KAAK,SAAAC,GACPC,QAAQC,IAAIF,KACVG,MAAM,SAAAC,GACRH,QAAQC,IAAIE,MAIRC,MAAQ,WACb,IAAIZ,EAAKX,MAAMY,MAAfC,EAAAL,KAAAI,MAEAE,MAAMC,KAAK,eAAXD,MAAMC,EACLf,SADyBa,IAEzBG,KAAAA,SAAAA,GACQE,MAAND,EAAKO,KAACN,IACRO,OAAGP,SAAA,cAEDG,MAAM,SAAAC,GACRH,QAAQC,IAAIE","file":"bundle.min.js","sourcesContent":["\nconst email = document.getElementById('email-field');\nconst pass = document.getElementById('password-field');\n\nif(email)\n{\n\temail.addEventListener(\"input\", (event) => {\n\t\tif (email.validity.typeMismatch) {\n\t\t\temail.setCustomValidity(\"Enter a valid email adress\");\n\t\t} else {\n\t\t\temail.setCustomValidity(\"\");\n\t\t}\n\t});\n}\nif(pass){\n\tpass.addEventListener(\"input\", (event) => {\n\t\tif (pass.validity.tooShort && pass.validity.patternMismatch) {\n\t\t\tpass.setCustomValidity(\"1. The Password must be atleast 8 character long.       \\n2.The Password must contain atleast one letter, one number and one special character.\");\n\t\t} else if (pass.validity.patternMismatch) {\n\t\t\tpass.setCustomValidity(\"The Password must contain atleast one letter, one number and one special character.\");\n\t\t} else if (pass.validity.tooShort) {\n\t\t\tpass.setCustomValidity(\"The Password must be atleast 8 character long.\");\n\t\t} else {\n\t\t\tpass.setCustomValidity(\"\");\n\t\t}\n\t});\n}\n\t\n\nconst register = () => {\n\tlet em = email.value, pw = pass.value;\n\n\taxios.post('/auth/signup', {\n\t\temail: em,\n\t\tpassword: pw\n\t}).then((response) => {\n\t\tconsole.log(response);\n\t}).catch((err) => {\n\t\tconsole.log(err);\n\t});\n}\n\nconst login = () => {\n\tlet em = email.value, pw = pass.value;\n\n\taxios.post('/auth/login', {\n\t\temail: em,\n\t\tpassword: pw\n\t}).then((response) => {\n\t\tif(response.data.s === 'p')\n\t\t\twindow.location = '/manager';\n\t}).catch((err) => {\n\t\tconsole.log(err);\n\t});\n}"]}